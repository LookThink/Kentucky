// ------------------------------------------------------------------- //
// Kentucky Mixins
// ------------------------------------------------------------------- //
// Font Size / Line Height AiO
// ------------------------------------------------------------------- //

@mixin font-size($font-size, $line-height: true){
  font-size: $font-size;
  font-size: ($font-size / $base-font-size) * 1rem;
  
  @if $line-height == true{
    line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
  }
}


// ------------------------------------------------------------------- //
// Style any number of headings at once
// 
// .foo{
//   @include headings(1,3){
//     color: #B4DA55;
//   }
// }
// ------------------------------------------------------------------- //

@mixin headings($from: 1, $to: 6){
  %base-heading{
    @content
  }
  
  @if $from >= 1 and $to <= 6{
    @for $i from $from through $to{
      h#{$i}{
        @extend %base-heading;
      }
    }
  }
}


// ------------------------------------------------------------------- //
// Text Truncation
//
// @include truncate(450px);
// Only works for single-line truncation
// ------------------------------------------------------------------- //

@mixin truncate($truncation-boundary){
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


// ------------------------------------------------------------------- //
// CSS Arrows
//
// @include arrow(top, center, #B4DA55, #4C3);
// ------------------------------------------------------------------- //

@mixin arrow($arrow-edge, $arrow-location, $arrow-color, $border-color: $arrow-color){
  
  @if $arrow-edge == top{
    @extend %arrow--top;

    &:before{
      border-bottom-color: $border-color !important;
    }
    &:after{
      border-bottom-color: $arrow-color !important;
    }
  
    @if $arrow-location == left{
      @extend %arrow--left;
    }
    @if $arrow-location == center{
      @extend %arrow--center;
    }
    @if $arrow-location == right{
      @extend %arrow--right;
    }
  }

  @if $arrow-edge == right{
    @extend %arrow--far;

    &:before{
        border-left-color: $border-color !important;
    }
    &:after{
        border-left-color: $arrow-color !important;
    }

    @if $arrow-location == top{
      @extend %arrow--upper;
    }
    @if $arrow-location == center{
      @extend %arrow--middle;
    }
    @if $arrow-location == bottom{
      @extend %arrow--lower;
    }
  }

  @if $arrow-edge == bottom{
      @extend %arrow--bottom;

    &:before{
      border-top-color: $border-color !important;
    }
    &:after{
      border-top-color: $arrow-color !important;
    }

    @if $arrow-location == left{
      @extend %arrow--left;
    }
    @if $arrow-location == center{
      @extend %arrow--center;
    }
    @if $arrow-location == right{
      @extend %arrow--right;
    }
  }

  @if $arrow-edge == left{
    @extend %arrow--near;

    &:before{
      border-right-color:$border-color!important;
    }
    &:after{
      border-right-color:$arrow-color!important;
    }

    @if $arrow-location == top{
      @extend %arrow--upper;
    }
    @if $arrow-location == center{
      @extend %arrow--middle;
    }
    @if $arrow-location == bottom{
        @extend %arrow--lower;
    }
  }
}


// ------------------------------------------------------------------- //
// Sprite Sheet
//
// @include sprite(0,0);
// ------------------------------------------------------------------- //

@mixin sprite($col, $row){
  background: url($sprite-shet-loc) no-repeat ($col * -$sprite-sheet-grid) ($row * -$sprite-sheet-grid);
}


// ------------------------------------------------------------------- //
// Custom Borders / Widths
// 
// @include border(2px 0, solid, #B4DA55);
// ------------------------------------------------------------------- //

@mixin border($border-widths, $border-style, $border-color){
  border: $border-style $border-color;
  border-width: $border-widths;
}

